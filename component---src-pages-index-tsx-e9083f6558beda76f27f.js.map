{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","posts","site","siteMetadata","title","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"kHAAA,gJA0EeA,UAzCG,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,KAEbC,GADYD,EAAKE,KAAKC,aAAaC,MAC3BJ,EAAKK,kBAAkBC,OAErC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,MAAM,cACX,kBAAC,IAAD,MACCH,EAAMM,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKE,OAAOC,MACjDP,IAGL,+BAAQI,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,kBAgBxD,IAAMC,EAAY","file":"component---src-pages-index-tsx-e9083f6558beda76f27f.js","sourcesContent":["// Gatsby supports TypeScript natively!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport './index.css'\r\nimport Signup from \"../components/signup\"\r\n\r\ntype Data = {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  allMarkdownRemark: {\r\n    edges: {\r\n      node: {\r\n        excerpt: string\r\n        frontmatter: {\r\n          title: string\r\n          date: string\r\n          description: string\r\n        }\r\n        fields: {\r\n          slug: string\r\n        }\r\n      }\r\n    }[]\r\n  }\r\n}\r\n\r\nconst BlogIndex = ({ data }: PageProps<Data>) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"All posts\" />\r\n      <Bio />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        )\r\n      })}\r\n      {/* <aside>\r\n        <Signup />\r\n      </aside> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}