{"version":3,"sources":["webpack:///./src/components/images/Cat.js","webpack:///./src/components/signup.js","webpack:///./src/templates/blog-post.js"],"names":["Cat","data","fixed","placeholderImage","childImageSharp","Signup","render","form","action","className","method","min-width","style","boxShadow","backgroundColor","borderRadius","data-style","data-element","color","fontSize","fontWeight","data-group","name","aria-label","placeholder","required","type","borderColor","React","Component","pageQuery","BlogPostTemplate","pageContext","post","location","markdownRemark","previous","next","title","frontmatter","description","excerpt","to","cursor","textDecoration","role","marginBottom","scale","display","rhythm","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"mappings":"gtFA+BeA,EAhBH,WACR,IAAMC,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,iBAAiBC,gBAAgBF,S,UCxB7D,IA+FeG,E,gLA5FXC,OAAA,WACI,IAAIC,EAJgB,UAIhBA,EAEO,gCAFPA,EAGU,2DAHVA,EAIY,cAEhB,OACI,0BACIC,OAAM,oCAAsCD,EAAtC,iBACNE,UAAU,yBACVC,OAAO,OACPC,YAAU,sBACVC,MAAO,CACHC,UAAW,4DACXC,gBAAiB,OACjBC,aAAc,QAGlB,yBAAKC,aAAW,QACZ,yBACIC,eAAa,SACbR,UAAU,iBACVG,MAAO,CAAEE,gBAAiB,YAE1B,wBACIL,UAAU,iBACVQ,eAAa,SACbL,MAAO,CACHM,MAAO,mBACPC,SAAU,OACVC,WAAY,MAGfb,GAEL,yBACIU,eAAa,YACbR,UAAU,oBACVG,MAAO,CAAEM,MAAO,sBAEhB,2BAAIX,IAER,yBAAKE,UAAU,iBACX,kBAAC,EAAD,QAGR,yBAAKQ,eAAa,SAASR,UAAU,kBACjC,wBACIA,UAAU,oCACVQ,eAAa,SACbI,aAAW,UAGf,yBAAKJ,eAAa,SAASR,UAAU,8BACjC,yBAAKA,UAAU,iBACX,2BACIA,UAAU,gBACVa,KAAK,gBACLC,aAAW,qBACXC,YAAY,qBACZC,UAAQ,EACRC,KAAK,QACLd,MAAO,CACHe,YAAa,UACbZ,aAAc,MACdG,MAAO,eACPE,WAAY,QAIxB,4BACIH,eAAa,SACbR,UAAU,iBACVG,MAAO,CACHE,gBAAiB,gBACjBC,aAAc,OACdG,MAAO,QACPE,WAAY,MAGhB,yBAAKX,UAAU,oBACf,8BAAOF,S,GAnFlBqB,IAAMC,W,YC6EdC,GAFEC,UAzEU,SAAC,GAAqC,IAAnC9B,EAAkC,EAAlCA,KAAM+B,EAA4B,EAA5BA,YAC1BC,GADsD,EAAfC,SAChCjC,EAAKkC,gBACVC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOL,EAAKM,YAAYD,MACxBE,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,iCACE,kBAAC,OAAD,CAAMC,GAAG,IAAI9B,MAAO,CAAE+B,OAAQ,UAAWC,eAAgB,OAAQ/B,UAAW,SAAU,0BAAMgC,KAAK,MAAMtB,aAAW,SAA5B,OAAtF,uBACA,gCACE,wBACEX,MAAO,CAELkC,aAAc,IAGfb,EAAKM,YAAYD,OAEpB,uBACE1B,MAAK,+BACAmC,aAAM,KADN,IAEHC,QAAQ,QACRF,aAAcG,YAAO,MAGtBhB,EAAKM,YAAYW,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQnB,EAAKoB,QACjD,wBACEzC,MAAO,CACLkC,aAAcG,YAAO,MAGzB,gCACE,kBAAC,IAAD,MACA,kBAAC,EAAD,QAIJ,6BACE,wBACErC,MAAO,CACLoC,QAAQ,OACRM,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CAAMM,GAAIN,EAASsB,OAAOC,KAAMC,IAAI,QAApC,KACKxB,EAASG,YAAYD,QAI9B,4BACGD,GACC,kBAAC,OAAD,CAAMK,GAAIL,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKE,YAAYD,MADpB,WAaQ","file":"component---src-templates-blog-post-js-69c1da11caa81f7e475f.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Cat = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"CATTO_2.png\" }) {\n          childImageSharp {\n            fixed(width: 75, height: 85) {\n            ...GatsbyImageSharpFixed\n            }\n          }\n      }\n    }\n  `)\n\n    return <Img fixed={data.placeholderImage.childImageSharp.fixed} />\n}\n\nexport default Cat","import React from 'react';\nimport Cat from './images/Cat'\nimport './Signup.css';\n\nconst CATWOMANIYA_FORM_ID = '1655780';\n\nclass Signup extends React.Component {\n    render() {\n        let form = {\n            id: CATWOMANIYA_FORM_ID,\n            title: 'Want more contents like this?',\n            subTitle: 'I write about sustainability, healthcare and technology.',\n            buttonText: 'Get Updates',\n        };\n        return (\n            <form\n                action={`https://app.convertkit.com/forms/${form.id}/subscriptions`}\n                className=\"seva-form formkit-form\"\n                method=\"post\"\n                min-width=\"400 500 600 700 800\"\n                style={{\n                    boxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1)',\n                    backgroundColor: '#fff',\n                    borderRadius: '6px',\n                }}\n            >\n                <div data-style=\"full\">\n                    <div\n                        data-element=\"column\"\n                        className=\"formkit-column\"\n                        style={{ backgroundColor: '#F9FAFB' }}\n                    >\n                        <h1\n                            className=\"formkit-header\"\n                            data-element=\"header\"\n                            style={{\n                                color: 'var(--textTitle)',\n                                fontSize: '20px',\n                                fontWeight: 700,\n                            }}\n                        >\n                            {form.title}\n                        </h1>\n                        <div\n                            data-element=\"subheader\"\n                            className=\"formkit-subheader\"\n                            style={{ color: 'var(--textNormal)' }}\n                        >\n                            <p>{form.subTitle}</p>\n                        </div>\n                        <div className=\"formkit-image\">\n                            <Cat />\n                        </div>\n                    </div>\n                    <div data-element=\"column\" className=\"formkit-column\">\n                        <ul\n                            className=\"formkit-alert formkit-alert-error\"\n                            data-element=\"errors\"\n                            data-group=\"alert\"\n                        />\n\n                        <div data-element=\"fields\" className=\"seva-fields formkit-fields\">\n                            <div className=\"formkit-field\">\n                                <input\n                                    className=\"formkit-input\"\n                                    name=\"email_address\"\n                                    aria-label=\"Your email address\"\n                                    placeholder=\"Your email address\"\n                                    required\n                                    type=\"email\"\n                                    style={{\n                                        borderColor: '#403b44',\n                                        borderRadius: '4px',\n                                        color: 'rgb(0, 0, 0)',\n                                        fontWeight: 400,\n                                    }}\n                                />\n                            </div>\n                            <button\n                                data-element=\"submit\"\n                                className=\"formkit-submit\"\n                                style={{\n                                    backgroundColor: 'rebeccapurple',\n                                    borderRadius: '24px',\n                                    color: 'white',\n                                    fontWeight: 700,\n                                }}\n                            >\n                                <div className=\"formkit-spinner\" />\n                                <span>{form.buttonText}</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Signup;","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Signup from \"../components/signup\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <Link to=\"/\" style={{ cursor: 'pointer', textDecoration: 'none', boxShadow: 'none' }}><span role=\"img\" aria-label=\"right\">üëà&nbsp;</span>Go back to the blog</Link>\n        <header>\n          <h1\n            style={{\n              // marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n          <Signup />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}