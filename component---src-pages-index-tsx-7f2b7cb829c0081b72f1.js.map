{"version":3,"sources":["webpack:///./src/components/images/Cat.js","webpack:///./src/components/signup.js","webpack:///./src/pages/index.tsx"],"names":["Cat","data","fluid","placeholderImage","childImageSharp","fixed","Signup","render","form","action","className","method","min-width","style","boxShadow","backgroundColor","borderRadius","data-style","data-element","color","fontSize","fontWeight","data-group","aria-label","name","placeholder","type","borderColor","required","React","Component","pageQuery","BlogIndex","posts","site","siteMetadata","title","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","marginBottom","rhythm","to","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"sUA+BeA,EAhBH,WACR,IAAMC,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,iBAAiBC,gBAAgBC,S,UCxB7D,IA4JeC,E,gLAzJXC,OAAA,WACI,IAAIC,EAJgB,SAIhBA,EAEO,8BAFPA,EAGU,+CAHVA,EAIY,YAEhB,OACI,0BACIC,OAAM,oCAAsCD,EAAtC,iBACNE,UAAU,yBACVC,OAAO,OACPC,YAAU,sBACVC,MAAO,CACHC,UAAW,4DACXC,gBAAiB,OACjBC,aAAc,QAGlB,yBAAKC,aAAW,QACZ,yBACIC,eAAa,SACbR,UAAU,iBACVG,MAAO,CAAEE,gBAAiB,YAE1B,wBACIL,UAAU,iBACVQ,eAAa,SACbL,MAAO,CACHM,MAAO,mBACPC,SAAU,OACVC,WAAY,MAGfb,GAEL,yBACIU,eAAa,YACbR,UAAU,oBACVG,MAAO,CAAEM,MAAO,sBAEhB,2BAAIX,IAER,yBAAKE,UAAU,iBAgCX,kBAAC,EAAD,QAGR,yBAAKQ,eAAa,SAASR,UAAU,kBACjC,wBACIA,UAAU,oCACVQ,eAAa,SACbI,aAAW,UAGf,yBAAKJ,eAAa,SAASR,UAAU,8BACjC,yBAAKA,UAAU,iBACX,2BACIA,UAAU,gBACVa,aAAW,kBACXC,KAAK,qBACLC,YAAY,kBACZC,KAAK,OACLb,MAAO,CACHc,YAAa,UACbX,aAAc,MACdG,MAAO,eACPE,WAAY,KAEhBO,UAAQ,KAGhB,yBAAKlB,UAAU,iBACX,2BACIA,UAAU,gBACVc,KAAK,gBACLD,aAAW,qBACXE,YAAY,qBACZG,UAAQ,EACRF,KAAK,QACLb,MAAO,CACHc,YAAa,UACbX,aAAc,MACdG,MAAO,eACPE,WAAY,QAIxB,4BACIH,eAAa,SACbR,UAAU,iBACVG,MAAO,CACHE,gBAAiB,gBACjBC,aAAc,OACdG,MAAO,QACPE,WAAY,MAGhB,yBAAKX,UAAU,oBACf,8BAAOF,KAGf,yBACIU,eAAa,YACbR,UAAU,oBACVG,MAAO,CACHM,MAAO,oBACPC,SAAU,OACVC,WAAY,MAGhB,qDACA,6CACmB,mCADnB,e,GA/IPQ,IAAMC,WCsEdC,GAFEC,UAzCG,SAAC,GAA8B,IAA5B/B,EAA4B,EAA5BA,KAEbgC,GADYhC,EAAKiC,KAAKC,aAAaC,MAC3BnC,EAAKoC,kBAAkBC,OAErC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,MAAM,cACX,kBAAC,IAAD,MACCH,EAAMM,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACE9B,MAAO,CACLgC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMjC,MAAO,CAAEC,UAAW,QAAUiC,GAAIP,EAAKE,OAAOC,MACjDP,IAGL,+BAAQI,EAAKC,YAAYO,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,gBAOzD,+BACE,kBAAC,EAAD,SAQiB,e","file":"component---src-pages-index-tsx-7f2b7cb829c0081b72f1.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Cat = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"CATTO_2.png\" }) {\n          childImageSharp {\n            fixed(width: 40, height: 40) {\n            ...GatsbyImageSharpFixed\n            }\n          }\n      }\n    }\n  `)\n\n    return <Img fluid={data.placeholderImage.childImageSharp.fixed} />\n}\n\nexport default Cat","import React from 'react';\nimport Cat from './images/Cat'\nimport './Signup.css';\n\nconst CATWOMANIYA_FORM_ID = '812047';\n\nclass Signup extends React.Component {\n    render() {\n        let form = {\n            id: CATWOMANIYA_FORM_ID,\n            title: 'Subscribe to the Newsletter',\n            subTitle: 'Subscribe to get my latest content by email.',\n            buttonText: 'Subscribe',\n        };\n        return (\n            <form\n                action={`https://app.convertkit.com/forms/${form.id}/subscriptions`}\n                className=\"seva-form formkit-form\"\n                method=\"post\"\n                min-width=\"400 500 600 700 800\"\n                style={{\n                    boxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1)',\n                    backgroundColor: '#fff',\n                    borderRadius: '6px',\n                }}\n            >\n                <div data-style=\"full\">\n                    <div\n                        data-element=\"column\"\n                        className=\"formkit-column\"\n                        style={{ backgroundColor: '#F9FAFB' }}\n                    >\n                        <h1\n                            className=\"formkit-header\"\n                            data-element=\"header\"\n                            style={{\n                                color: 'var(--textTitle)',\n                                fontSize: '20px',\n                                fontWeight: 700,\n                            }}\n                        >\n                            {form.title}\n                        </h1>\n                        <div\n                            data-element=\"subheader\"\n                            className=\"formkit-subheader\"\n                            style={{ color: 'var(--textNormal)' }}\n                        >\n                            <p>{form.subTitle}</p>\n                        </div>\n                        <div className=\"formkit-image\">\n                            {/* <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                width=\"46\"\n                                height=\"46\"\n                                viewBox=\"0 0 46 46\"\n                                style={{ maxWidth: '100%' }}\n                            >\n                                <g fill=\"none\" fillRule=\"evenodd\">\n                                    <path\n                                        fill=\"#DD92AB\"\n                                        d=\"M23,36 C22.813,36 22.627,35.948 22.463,35.844 L0.463,21.844 C0.159,21.651 -0.017,21.308 0.001,20.948 C0.02,20.589 0.23,20.266 0.553,20.105 L23,6 L45.447,20.105 C45.769,20.266 45.98,20.588 45.999,20.948 C46.018,21.308 45.841,21.65 45.537,21.844 L23.537,35.844 C23.373,35.948 23.187,36 23,36 Z\"\n                                    />\n                                    <path\n                                        fill=\"#FFF\"\n                                        d=\"M38,37 L8,37 L8,1 C8,0.448 8.448,0 9,0 L37,0 C37.552,0 38,0.448 38,1 L38,37 Z\"\n                                    />\n                                    <path\n                                        fill=\"#FFA7C4\"\n                                        d=\"M45,46 C44.916,46 44.831,45.989 44.748,45.968 L21.748,39.968 L22,33 L46,21 L46,45 C46,45.31 45.856,45.602 45.611,45.792 C45.435,45.928 45.219,46 45,46 Z\"\n                                    />\n                                    <path\n                                        fill=\"#FFC3D7\"\n                                        d=\"M45,46 L1,46 C0.447,46 0,45.552 0,45 L0,21 L45.479,44.122 C45.88,44.341 46.083,44.804 45.969,45.247 C45.856,45.69 45.457,46 45,46 Z\"\n                                    />\n                                    <path\n                                        fill=\"#FFA7C4\"\n                                        d=\"M19 20.414L14.293 15.707C13.902 15.316 13.902 14.684 14.293 14.293L19 9.586 20.414 11 16.414 15 20.414 19 19 20.414zM27 20.414L25.586 19 29.586 15 25.586 11 27 9.586 31.707 14.293C32.098 14.684 32.098 15.316 31.707 15.707L27 20.414z\"\n                                    />\n                                </g>\n                            </svg> */}\n                            {/* <img src=\"../images/CATTO_2.png\" alt=\"mail-icon\" /> */}\n                            <Cat />\n                        </div>\n                    </div>\n                    <div data-element=\"column\" className=\"formkit-column\">\n                        <ul\n                            className=\"formkit-alert formkit-alert-error\"\n                            data-element=\"errors\"\n                            data-group=\"alert\"\n                        />\n\n                        <div data-element=\"fields\" className=\"seva-fields formkit-fields\">\n                            <div className=\"formkit-field\">\n                                <input\n                                    className=\"formkit-input\"\n                                    aria-label=\"Your first name\"\n                                    name=\"fields[first_name]\"\n                                    placeholder=\"Your first name\"\n                                    type=\"text\"\n                                    style={{\n                                        borderColor: '#403b44',\n                                        borderRadius: '4px',\n                                        color: 'rgb(0, 0, 0)',\n                                        fontWeight: 400,\n                                    }}\n                                    required\n                                />\n                            </div>\n                            <div className=\"formkit-field\">\n                                <input\n                                    className=\"formkit-input\"\n                                    name=\"email_address\"\n                                    aria-label=\"Your email address\"\n                                    placeholder=\"Your email address\"\n                                    required\n                                    type=\"email\"\n                                    style={{\n                                        borderColor: '#403b44',\n                                        borderRadius: '4px',\n                                        color: 'rgb(0, 0, 0)',\n                                        fontWeight: 400,\n                                    }}\n                                />\n                            </div>\n                            <button\n                                data-element=\"submit\"\n                                className=\"formkit-submit\"\n                                style={{\n                                    backgroundColor: 'rebeccapurple',\n                                    borderRadius: '24px',\n                                    color: 'white',\n                                    fontWeight: 700,\n                                }}\n                            >\n                                <div className=\"formkit-spinner\" />\n                                <span>{form.buttonText}</span>\n                            </button>\n                        </div>\n                        <div\n                            data-element=\"guarantee\"\n                            className=\"formkit-guarantee\"\n                            style={{\n                                color: 'var(--textNormal)',\n                                fontSize: '13px',\n                                fontWeight: 400,\n                            }}\n                        >\n                            <p>I won’t send you spam.</p>\n                            <p>\n                                Unsubscribe at <em>any</em> time.\n              </p>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Signup;","// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport './index.css'\nimport Signup from \"../components/signup\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n      <aside>\n        <Signup />\n      </aside>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}